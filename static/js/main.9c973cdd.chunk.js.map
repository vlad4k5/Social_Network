{"version":3,"sources":["components/common/TextError/TextError.module.scss","components/common/Preloader/Preloader.module.scss","components/Settings/Settings.module.scss","components/Dialogs/Dialogs.module.scss","components/common/Paginator/Paginator.module.scss","hocs/withAuthRedirect.tsx","store/dialogs-reducer.ts","assets/images/basicUserPhoto.png","components/Dialogs/DialogsUser.tsx","components/Dialogs/DialogsMessage.tsx","components/Dialogs/Dialogs.tsx","assets/images/logo.svg","api/instance-api.ts","api/auth-api.ts","api/profile-api.ts","store/profile-reducer.ts","store/auth-reducer.ts","components/Header/Header.tsx","components/common/TextError/TextError.tsx","components/Login/Login.tsx","components/Navbar/Navbar.tsx","components/Profile/Posts/Post.tsx","components/Profile/Posts/Posts.tsx","assets/images/preloader.gif","components/common/Preloader/Preloader.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Settings/Settings.tsx","api/users-api.ts","components/common/Paginator/Paginator.tsx","components/Users/UserItem/UserItem.tsx","components/Users/UsersSearchForm/UsersSearchForm.tsx","components/Users/UserItem/FakeUserItem.tsx","components/Users/Users.tsx","App.tsx","store/users-reducer.ts","store/store.ts","index.tsx","components/Header/Header.module.scss","components/Login/Login.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/Posts/Posts.module.scss","components/Users/UserItem/UserItem.module.scss","App.module.scss","components/Users/UsersSearchForm/UsersSearchForm.module.scss","components/Navbar/Navbar.module.scss"],"names":["module","exports","mapSateToProps","state","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","ADD_NEW_MESSAGE","initialState","users","userName","id","messages","dialogsActions","addNewMessage","message","type","dialogsReducer","action","DialogsUser","className","s","dialogsUserWrapper","src","basicPhoto","dialogsUserPhoto","alt","linkToUserChat","DialogsMessage","dialogsMessageWrapper","compose","dialogs","dialogsUsers","map","u","dialogsMessages","m","index","dialogsWrapper","initialValues","onSubmit","values","resetForm","as","name","sendMessageButton","instance","axios","create","baseURL","withCredentials","headers","authAPI","get","res","data","delete","loginData","post","profileAPI","userId","profile","put","status","photoFile","formData","FormData","append","SET_PROFILE","SET_STATUS","SET_LOADING","SET_PHOTO","ADD_NEW_POST","profileInfo","isLoading","posts","likesCount","profileActions","setProfile","setStatus","setLoading","loading","setPhoto","photos","addNewPost","postText","getProfile","dispatch","a","getStatus","profileReducer","newPost","length","SET_USER_DATA","SET_CAPTCHA","SET_ERROR_MESSAGE","userData","email","login","captcha","errorMessage","authActions","userAuthorizing","resultCode","authReducer","logout","header_wrapper","mediaBlock","logo","slogan","loginBlock","linkToProfile","onClick","logoutButton","linkToLogin","TextError","children","error","captchaRes","url","validationSchema","Yup","required","nullable","password","loginWrapper","rememberMe","serverErrorMessage","loginItem","component","placeholder","checkboxBlock","htmlFor","label","toggle","captchaBlock","err","loginButton","Navbar","navbar","navbar__Item","link","activeClassName","active","Post","userPhoto","Posts","isOwner","profilePosts","reverse","p","field","postField","newPostButton","Preloader","preloaderBlock","preloaderImg","ProfileInfo","updateStatus","updatePhoto","useState","statusEditMode","setStatusEditMode","statusText","setStatusText","useEffect","profileInfo_wrapper","large","ownerPhoto","onChange","e","target","files","editProfile","aboutMe","fullName","userStatus","value","currentTarget","onBlur","autoFocus","aboutMeInfo","jobInfo","lookingForAJob","lookingForAJobDescription","ownerId","withRouter","match","params","small","updateProfile","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","max","settingsComponent","settingsWrapper","submitButton","usersAPI","count","page","term","Paginator","totalItemsCount","onPageChanged","currentPage","itemsPerPage","pagesInPaginator","totalPages","Math","ceil","lastPage","pages","i","push","activePage","paginatorWrapper","disabled","UserItem","photo","followed","isFollowed","setIsFollowed","follow","unfollow","userItem","userInfo","subscribeBlock","followedButton","UsersSearchForm","setFindValue","setCurrentPage","setTerm","searchWrapper","searchField","searchButton","FakeUserItem","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","cx","cy","r","setUsers","totalUsersCount","setTotalUsersCount","findValue","items","totalCount","showUsers","Array","app__Wrapper","app__Header","app__Navbar","app__Content","exact","from","path","render","SET_USERS","usersReducer","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9c973cdd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"TextError_error__2Wr7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderBlock\":\"Preloader_preloaderBlock__3XwT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsComponent\":\"Settings_settingsComponent__3y_b_\",\"settingsWrapper\":\"Settings_settingsWrapper__1kBQ5\",\"toggle\":\"Settings_toggle__36KCx\",\"errorMessage\":\"Settings_errorMessage__1QK2l\",\"submitButton\":\"Settings_submitButton__2VnsO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__1y2rU\",\"dialogsUsers\":\"Dialogs_dialogsUsers__1HD5x\",\"dialogsUserPhoto\":\"Dialogs_dialogsUserPhoto__2dG1w\",\"dialogsMessages\":\"Dialogs_dialogsMessages__3fwCp\",\"sendMessageButton\":\"Dialogs_sendMessageButton__1J7Te\",\"dialogsUserWrapper\":\"Dialogs_dialogsUserWrapper__3awDP\",\"linkToUserChat\":\"Dialogs_linkToUserChat__4nRSW\",\"dialogsMessageWrapper\":\"Dialogs_dialogsMessageWrapper__2Id3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorWrapper\":\"Paginator_paginatorWrapper__-TPRt\",\"activePage\":\"Paginator_activePage__2cdnt\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { AppStateType } from \"../store/store\";\r\n\r\ntype PropsType = {\r\n    isAuth: boolean | null\r\n}\r\n\r\nconst mapSateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nfunction withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\r\n    function RedirectComponent(props: PropsType) {\r\n        let { isAuth, ...restProps } = props\r\n        if (isAuth === false) return <Redirect to=\"/login\" />\r\n\r\n        return < Component {...restProps as unknown as WCP} />\r\n    }\r\n    const ConnectAuthRedirectComponent = connect<PropsType, {}, WCP, AppStateType>(mapSateToProps)(RedirectComponent);\r\n\r\n    return ConnectAuthRedirectComponent\r\n}\r\nexport default withAuthRedirect","import { InferActionTypes } from \"./store\";\r\nimport { UserDialogType } from \"./types/types\";\r\n\r\nconst ADD_NEW_MESSAGE = \"SN/DIALOGS/ADD_NEW_MESSAGE\";\r\n\r\nlet initialState = {\r\n    users: [\r\n        { userName: \"Dmitry\", id: 1 },\r\n        { userName: \"Alexander\", id: 2 },\r\n        { userName: \"Vladimir\", id: 3 },\r\n        { userName: \"Konstantin\", id: 4 },\r\n        { userName: \"Maxim\", id: 5 }] as Array<UserDialogType>,\r\n    messages: [\"Hello, my name is Dmitry\", \"What's up?\", \"How old are you?\", \"Where are you from?\", \"Nice to meet you! :)\"] as Array<string>\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE: {\r\n            return { ...state, messages: [...state.messages, action.message] }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const dialogsActions = {\r\n    addNewMessage: (message: string) => ({ type: ADD_NEW_MESSAGE, message } as const)\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\ntype InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionTypes<typeof dialogsActions>","export default __webpack_public_path__ + \"static/media/basicUserPhoto.94cf7531.png\";","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./Dialogs.module.scss\";\r\nimport basicPhoto from \"../../assets/images/basicUserPhoto.png\";\r\n\r\ntype PropsType = {\r\n    userName: string\r\n}\r\n\r\nconst DialogsUser: React.FC<PropsType> = ({ userName }) => {\r\n    return <div className={s.dialogsUserWrapper}>\r\n        <img src={basicPhoto} className={s.dialogsUserPhoto} alt={\"User avatar\"} />\r\n        <NavLink className={s.linkToUserChat} to=\"/profile/17001\">{userName}</NavLink>\r\n    </div>\r\n}\r\nexport default DialogsUser\r\n","import s from \"./Dialogs.module.scss\";\r\nimport basicPhoto from \"../../assets/images/basicUserPhoto.png\";\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst DialogsMessage: React.FC<PropsType> = ({ message }) => {\r\n    return <div className={s.dialogsMessageWrapper}>\r\n        <img src={basicPhoto} className={s.dialogsUserPhoto} alt={\"User avatar\"} />\r\n        <span>{message}</span>\r\n    </div>\r\n}\r\nexport default DialogsMessage","import s from \"./Dialogs.module.scss\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\r\nimport { Field, Form, Formik, FormikHelpers } from \"formik\";\r\nimport { dialogsActions } from \"../../store/dialogs-reducer\";\r\nimport DialogsUser from \"./DialogsUser\";\r\nimport DialogsMessage from \"./DialogsMessage\";\r\nimport { UserDialogType } from \"../../store/types/types\";\r\nimport { AppStateType } from \"../../store/store\";\r\nimport React from \"react\";\r\n\r\ntype TStateProps = {\r\n    users: Array<UserDialogType>\r\n    messages: Array<string>\r\n}\r\n\r\ntype TDispatchProps = {\r\n    addNewMessage: (message: string) => void\r\n}\r\n\r\ntype PropsType = TStateProps & TDispatchProps\r\n\r\nconst Dialogs: React.FC<PropsType> = ({ users, messages, addNewMessage }) => {\r\n\r\n    const dialogsUsers = users.map(u => <DialogsUser key={u.id} userName={u.userName} />)\r\n    const dialogsMessages = messages.map((m, index) => <DialogsMessage key={index} message={m} />)\r\n\r\n    interface Values {\r\n        message: string\r\n    }\r\n\r\n    const onSubmit = (values: Values, { resetForm }: FormikHelpers<Values>) => {\r\n        addNewMessage(values.message);\r\n        resetForm();\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.dialogsWrapper}>\r\n            <div className={s.dialogsUsers}>\r\n                {dialogsUsers}\r\n            </div>\r\n            <div className={s.dialogsMessages}>\r\n\r\n                <div className={s.messages}>\r\n                    {dialogsMessages}\r\n                </div>\r\n\r\n                <div>\r\n                <Formik initialValues={{ message: \"\" }} onSubmit={onSubmit}>\r\n                    <Form>\r\n                        <Field as=\"textarea\" id=\"message\" name=\"message\" />\r\n                        <button type=\"submit\" className={s.sendMessageButton}>Send message</button>\r\n                    </Form>\r\n                </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div >\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    users: state.dialogs.users,\r\n    messages: state.dialogs.messages\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect<TStateProps, TDispatchProps, {}, AppStateType>(mapStateToProps, { addNewMessage: dialogsActions.addNewMessage })\r\n)(Dialogs)","export default __webpack_public_path__ + \"static/media/logo.e68b35f4.svg\";","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0\",\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': \"59cbca27-652d-4a07-9bc2-6419916cee9e\"\r\n    }\r\n})\r\n\r\nexport type BasicResponseType = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n}\r\n\r\nexport type ResponseWithDataType<D> = {\r\n    data: D\r\n    resultCode: number\r\n    messages: Array<string>\r\n}","import { LoginDataType } from \"../store/types/types\";\r\nimport { BasicResponseType, instance, ResponseWithDataType } from \"./instance-api\";\r\n\r\ntype TUserAuthorizedData = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\ntype TLoginData = {\r\n    userId: number\r\n}\r\ntype TgetCaptcha = {\r\n    url: string\r\n}\r\n\r\nexport const authAPI = {\r\n    async isUserAuthorized (){\r\n        const res = await instance.get<ResponseWithDataType<TUserAuthorizedData>>(\"/auth/me\")\r\n        return res.data\r\n    },\r\n    async logout() {\r\n        const res = await instance.delete<BasicResponseType>(\"/auth/login\")\r\n        return res.data\r\n    },\r\n    async login(loginData: LoginDataType) {\r\n        const res = await instance.post<ResponseWithDataType<TLoginData>>(\"/auth/login\", loginData)\r\n        return res.data\r\n    },\r\n    async getCaptcha() {\r\n        const res = await instance.get<TgetCaptcha>(\"/security/get-captcha-url\")\r\n        return res.data\r\n    }\r\n}","import { PhotosType, ProfileInfoType } from \"../store/types/types\";\r\nimport { BasicResponseType, instance, ResponseWithDataType } from \"./instance-api\";\r\n\r\ntype SetPhotoDataType = {\r\n    photos: PhotosType,\r\n}\r\n\r\nexport const profileAPI = {\r\n    async getProfile(userId: number) {\r\n        const res = await instance.get<ProfileInfoType>(`/profile/${userId}`)\r\n        return res.data\r\n    },\r\n    async getStatus(userId: number) {\r\n        const res = await instance.get<string>(`/profile/status/${userId}`)\r\n        return res.data\r\n    },\r\n\r\n    async setProfile(profile: ProfileInfoType) {\r\n        const res = await instance.put<BasicResponseType>(\"/profile\", profile)\r\n        return res.data\r\n    },\r\n    async setStatus(status: string) {\r\n        const res = await instance.put<BasicResponseType>(\"/profile/status\", { status })\r\n        return res.data\r\n    },\r\n    async setUserImage(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        const res = await instance.put<ResponseWithDataType<SetPhotoDataType>>(\"/profile/photo\", formData, { headers: { \"Content-Type\": \"multipart/form-data\" } })\r\n        return res.data\r\n    }\r\n}","import { profileAPI } from \"../api/profile-api\"\r\nimport { InferActionTypes } from \"./store\"\r\nimport { CommonThunkCreatorType, PhotosType, PostType, ProfileInfoType } from \"./types/types\"\r\n\r\nconst SET_PROFILE = \"SN/PROFILE/SET_PROFILE\"\r\nconst SET_STATUS = \"SN/PROFILE/SET_STATUS\"\r\nconst SET_LOADING = \"SN/PROFILE/SET_LOADING\"\r\nconst SET_PHOTO = \"SN/PROFILE/SET_PHOTO\"\r\nconst ADD_NEW_POST = \"SN/PROFILE/ADD_NEW_POST\"\r\n\r\nlet initialState = {\r\n    status: \"\",\r\n    profileInfo: null as ProfileInfoType | null,\r\n    isLoading: false,\r\n    posts: [\r\n        { id: 1, message: \"My first post\", likesCount: 190 },\r\n        { id: 2, message: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.\", likesCount: 21 },\r\n        { id: 3, message: \"Just an example\", likesCount: 16 },\r\n    ] as Array<PostType>\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_PROFILE: {\r\n            return { ...state, profileInfo: action.profileInfo }\r\n        }\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        case SET_LOADING: {\r\n            return { ...state, isLoading: action.loading }\r\n        }\r\n        case SET_PHOTO: {\r\n            return { ...state, profileInfo: { ...state.profileInfo, photos: action.photos } as ProfileInfoType }\r\n        }\r\n        case ADD_NEW_POST: {\r\n            let newPost = { id: state.posts.length + 1, message: action.postText, likesCount: 0 }\r\n            return { ...state, posts: [...state.posts, newPost] }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const profileActions = {\r\n    setProfile: (profileInfo: ProfileInfoType | null) => ({ type: SET_PROFILE, profileInfo } as const),\r\n    setStatus: (status: string) => ({ type: SET_STATUS, status } as const),\r\n    setLoading: (loading: boolean) => ({ type: SET_LOADING, loading } as const),\r\n    setPhoto: (photos: PhotosType) => ({ type: SET_PHOTO, photos } as const),\r\n    addNewPost: (postText: string) => ({ type: ADD_NEW_POST, postText } as const)\r\n}\r\n\r\n\r\nexport const getProfile = (userId: number): ThunkType => async dispatch => {\r\n    dispatch(profileActions.setLoading(true))\r\n    const res = await profileAPI.getProfile(userId)\r\n\r\n    dispatch(profileActions.setProfile(res))\r\n    dispatch(profileActions.setLoading(false))\r\n}\r\n\r\nexport const updateProfile = (profileInfo: ProfileInfoType): ThunkType => async dispatch => {\r\n    dispatch(profileActions.setLoading(true))\r\n    const res = await profileAPI.setProfile(profileInfo)\r\n\r\n    if (res.resultCode === 0) {\r\n        dispatch(profileActions.setProfile(profileInfo))\r\n    }\r\n    dispatch(profileActions.setLoading(false))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async dispatch => {\r\n    const res = await profileAPI.getStatus(userId)\r\n    if (res === null) {\r\n        dispatch(profileActions.setStatus(\"\"))\r\n    } else {\r\n        dispatch(profileActions.setStatus(res))\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async dispatch => {\r\n    const res = await profileAPI.setStatus(status)\r\n    if (res.resultCode === 0) {\r\n        dispatch(profileActions.setStatus(status))\r\n    }\r\n}\r\n\r\nexport const updatePhoto = (photoFile: File): ThunkType => async dispatch => {\r\n    const res = await profileAPI.setUserImage(photoFile)\r\n    if (res.resultCode === 0) {\r\n        dispatch(profileActions.setPhoto(res.data.photos))\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\ntype InitialStateType = typeof initialState;\r\nexport type ProfileActionsType = InferActionTypes<typeof profileActions>\r\ntype ThunkType = CommonThunkCreatorType<ProfileActionsType>","import { InferActionTypes } from './store';\r\nimport { authAPI } from \"../api/auth-api\"\r\nimport { getProfile, getStatus, profileActions, ProfileActionsType } from \"./profile-reducer\";\r\nimport { CommonThunkCreatorType, LoginDataType, UserDataType } from \"./types/types\";\r\n\r\nconst SET_USER_DATA = \"SN/AUTH/SET_USER_DATA\"\r\nconst SET_CAPTCHA = \"SN/AUTH/SET_CAPTCHA\"\r\nconst SET_ERROR_MESSAGE = \"SN/AUTH/SET_ERROR_MESSAGE\"\r\n\r\nlet initialState = {\r\n    userData: {\r\n        email: null as string | null,\r\n        id: null as number | null,\r\n        login: null as string | null\r\n    } as UserDataType,\r\n    isAuth: null as boolean | null,\r\n    captcha: null as string | null,\r\n    errorMessage: null as string | null\r\n}\r\n\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return { ...state, isAuth: action.isAuth, userData: action.userData ? action.userData : { email: null, id: null, login: null } }\r\n        }\r\n        case SET_CAPTCHA: {\r\n            return { ...state, captcha: action.captcha }\r\n        }\r\n        case SET_ERROR_MESSAGE: {\r\n            return { ...state, errorMessage: action.errorMessage }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const authActions = {\r\n    setUserData: (isAuth: boolean, userData: UserDataType | null) => ({ type: SET_USER_DATA, isAuth, userData } as const),\r\n    setCaptcha: (captcha: string | null) => ({ type: SET_CAPTCHA, captcha } as const),\r\n    setErrorMessage: (errorMessage: string | null) => ({ type: SET_ERROR_MESSAGE, errorMessage } as const)\r\n}\r\n\r\n\r\nexport const userAuthorizing = (): ThunkType => async dispatch => {\r\n    const res = await authAPI.isUserAuthorized()\r\n    if (res.resultCode === 0) {\r\n        dispatch(authActions.setUserData(true, res.data));\r\n        dispatch(getProfile(res.data.id));\r\n        dispatch(getStatus(res.data.id));\r\n    } else {\r\n        dispatch(authActions.setUserData(false, null));\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType => async dispatch => {\r\n    const res = await authAPI.logout()\r\n    if (res.resultCode === 0) {\r\n        dispatch(authActions.setUserData(false, null));\r\n        dispatch(profileActions.setProfile(null));\r\n        dispatch(profileActions.setStatus(\"\"));\r\n    }\r\n}\r\n\r\nexport const login = (loginData: LoginDataType): ThunkType => async dispatch => {\r\n    const res = await authAPI.login(loginData)\r\n    if (res.resultCode === 0) {\r\n        dispatch(userAuthorizing());\r\n        dispatch(authActions.setErrorMessage(null));\r\n        dispatch(authActions.setCaptcha(null))\r\n    } else if (res.resultCode === 10) {\r\n        dispatch(authActions.setErrorMessage(res.messages[0]))\r\n        const captchaRes = await authAPI.getCaptcha()\r\n        dispatch(authActions.setCaptcha(captchaRes.url))\r\n    }\r\n}\r\nexport default authReducer;\r\n\r\ntype InitialStateType = typeof initialState;\r\ntype ActionsType = InferActionTypes<typeof authActions>\r\ntype ThunkType = CommonThunkCreatorType<ActionsType | ProfileActionsType>","import React from \"react\";\r\nimport s from \"./Header.module.scss\"\r\nimport logo from \"../../assets/images/logo.svg\"\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../store/auth-reducer\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../store/store\";\r\n\r\ntype TStateProps = {\r\n    isAuth: boolean | null\r\n    userName: string | null\r\n}\r\ntype TDispatchProps = {\r\n    logout: () => void\r\n}\r\ntype PropsType = TStateProps & TDispatchProps\r\n\r\nconst Header: React.FC<PropsType> = ({ isAuth, logout, userName }) => {\r\n\r\n    return <div className={s.header_wrapper}>\r\n        <div className={s.mediaBlock}>\r\n            <img src={logo} className={s.logo} alt=\"Social-Network logo\" />\r\n            <h2 className={s.slogan}>Social Network</h2>\r\n        </div>\r\n        {isAuth ?\r\n        <div className={s.loginBlock}>\r\n            <NavLink to=\"/profile\" className={s.linkToProfile}>{userName}</NavLink>\r\n            <button onClick={logout} className={s.logoutButton}>Log out</button>\r\n        </div>\r\n        : <div className={s.loginBlock}>\r\n            <NavLink to=\"/login\" className={s.linkToLogin} >\r\n                <button className={s.logoutButton}>Log in</button>\r\n            </NavLink>\r\n        </div>\r\n        }\r\n    </div >\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    userName: state.auth.userData.login\r\n})\r\nexport default connect<TStateProps, TDispatchProps, {}, AppStateType>(mapStateToProps, { logout })(Header);","import React from \"react\";\r\nimport s from \"./TextError.module.scss\"\r\n\r\nconst TextError: React.FC<any> = ({ children }) => { \r\n    return <span className={s.error}>\r\n        {children}\r\n    </span>\r\n}\r\n\r\nexport default TextError;","import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { login } from \"../../store/auth-reducer\";\r\nimport s from \"./Login.module.scss\"\r\nimport * as Yup from \"yup\";\r\nimport TextError from \"../common/TextError/TextError\";\r\nimport { LoginDataType } from \"../../store/types/types\";\r\nimport { AppStateType } from \"../../store/store\";\r\n\r\ntype TStateProps = {\r\n    isAuth: boolean | null\r\n    captcha: string | null\r\n    errorMessage: string | null\r\n}\r\ntype TDispatchProps = {\r\n    login: (loginData: LoginDataType) => void\r\n}\r\ntype PropsType = TStateProps & TDispatchProps\r\n\r\nconst Login: React.FC<PropsType> = ({ isAuth, captcha, login, errorMessage }) => {\r\n\r\n    interface Values {\r\n        email: string\r\n        password: string\r\n        rememberMe: boolean\r\n        captcha: string | null\r\n    }\r\n\r\n    const onSubmit = (values: Values) => {\r\n        login(values);\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email(\" Invalid e-mail format!\").required(\" Field is required!\").nullable(),\r\n        password: Yup.string().required(\" Field is required!\").nullable()\r\n    })\r\n\r\n    if (isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n\r\n    return <div className={s.loginWrapper}>\r\n        < Formik initialValues={{\r\n            email: \"\",\r\n            password: \"\",\r\n            rememberMe: false,\r\n            captcha: null\r\n        }}\r\n            onSubmit={onSubmit}\r\n            validationSchema={validationSchema}\r\n        >\r\n            <Form>\r\n                <h2>Login Page </h2>\r\n                {errorMessage && <div className={s.serverErrorMessage}> {errorMessage} </div>}\r\n                <div className={s.loginItem} >\r\n                    < ErrorMessage name=\"email\" component={TextError} /> \r\n                    < Field type=\"text\" name=\"email\" placeholder=\"Email Address\" />\r\n                </div>\r\n\r\n                <div className={s.loginItem} >\r\n                    < ErrorMessage name=\"password\" component={TextError} /> \r\n                    < Field type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n                </div>\r\n\r\n                <div className={s.checkboxBlock} >\r\n                    <label htmlFor=\"rememberMe\" className={s.label}> Remember me:</label>\r\n                    <Field type=\"checkbox\" name=\"rememberMe\" id=\"rememberMe\"/>\r\n                    <label htmlFor=\"rememberMe\" className={s.toggle }><span></span></label>\r\n                </div>\r\n\r\n                {captcha && <div className={s.captchaBlock}>\r\n                    <img src={captcha} alt=\"captcha\" />\r\n                    <label htmlFor=\"captcha\" className={s.err} > Please write a symbols from  captcha: </label>\r\n                    <Field type=\"text\" id=\"captcha\" name=\"captcha\" />\r\n                </div>}\r\n\r\n                < button className={s.loginButton}> Login </button>\r\n            </Form>\r\n        </Formik>\r\n\r\n    </div >\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captcha: state.auth.captcha,\r\n    errorMessage: state.auth.errorMessage\r\n})\r\nexport default connect<TStateProps, TDispatchProps, {}, AppStateType>(mapStateToProps, { login })(Login);","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./Navbar.module.scss\"\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.navbar}>\r\n\r\n        <div className={s.navbar__Item}>\r\n            <NavLink to=\"/profile\" className={s.link} activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n\r\n        <div className={s.navbar__Item}>\r\n            <NavLink to=\"/dialogs\" className={s.link} activeClassName={s.active}>Messages</NavLink>\r\n        </div>\r\n\r\n        <div className={s.navbar__Item}>\r\n            <NavLink to=\"/users\" className={s.link} activeClassName={s.active}>Users  </NavLink>\r\n        </div>\r\n\r\n        <div className={s.navbar__Item}>\r\n            <NavLink to=\"/news\" className={s.link} activeClassName={s.active}>News</NavLink>\r\n        </div>\r\n\r\n        <div className={s.navbar__Item}>\r\n            <NavLink to=\"/music\" className={s.link} activeClassName={s.active}>Music</NavLink>\r\n        </div>\r\n\r\n        <div className={s.navbar__Item}>\r\n            <NavLink to=\"/settings\" className={s.link} activeClassName={s.active}>Settings</NavLink>\r\n        </div>\r\n\r\n    </nav>\r\n}\r\nexport default Navbar;","import s from \"./Posts.module.scss\"\r\n\r\ntype PropsType = {\r\n    id: number\r\n    userPhoto: any\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nconst Post: React.FC<PropsType> = ({ id, userPhoto, message, likesCount }) => {\r\n    return <div className={s.post} key={id}>\r\n        <img className={s.userPhoto} src={userPhoto} alt=\"User avatar\" />\r\n        <div>\r\n            <div className={s.postText}>\r\n                <span>{message}</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Post;","import s from \"./Posts.module.scss\"\r\nimport { Formik, Form, Field, FormikHelpers } from \"formik\";\r\nimport Post from \"./Post\";\r\nimport { PostType } from \"../../../store/types/types\";\r\n\r\ntype PropsType = {\r\n    posts: Array<PostType>\r\n    userPhoto: any\r\n    addNewPost: (postText: string) => void\r\n    isOwner: boolean | null\r\n}\r\n\r\nconst Posts: React.FC<PropsType> = ({ posts, userPhoto, addNewPost, isOwner }) => {\r\n\r\n    const profilePosts = [...posts].reverse().map(p =>\r\n        <Post key={p.id} message={p.message} likesCount={p.likesCount} userPhoto={userPhoto} id={p.id} />)\r\n\r\n    interface Values {\r\n        postText: string\r\n    }\r\n    const onSubmit = (values: Values, { resetForm }: FormikHelpers<Values>) => {\r\n        addNewPost(values.postText);\r\n        resetForm();\r\n    }\r\n\r\n    return <div>\r\n        {isOwner && <Formik initialValues={{ postText: \"\" }} onSubmit={onSubmit}>\r\n            <Form>\r\n                <Field name=\"postText\">\r\n                    {(props: any) => {\r\n\r\n                        const { field } = props;\r\n\r\n                        return <div>\r\n                            <textarea className={s.postField} type=\"text\" id=\"postText\" placeholder=\"Add new post...\" {...field}>{props.children}</textarea>\r\n                        </div>\r\n                    }}\r\n                </Field>\r\n                <button type=\"submit\" className={s.newPostButton}>Add post</button>\r\n            </Form>\r\n        </Formik>}\r\n        <div>\r\n            {profilePosts}\r\n        </div>\r\n    </div >\r\n}\r\nexport default Posts;","export default __webpack_public_path__ + \"static/media/preloader.c1479316.gif\";","import preloaderImg from \"../../../assets/images/preloader.gif\";\r\nimport s from \"./Preloader.module.scss\";\r\n\r\nconst Preloader = () => {\r\n    return <div className={s.preloaderBlock}>\r\n        <img src={preloaderImg} alt=\"Preloader\"></img>\r\n        </div>\r\n}\r\n\r\nexport default Preloader;","import s from \"./ProfileInfo.module.scss\";\r\nimport basicPhoto from \"../../../assets/images/basicUserPhoto.png\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ProfileInfoType } from \"../../../store/types/types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\ntype PropsType = {\r\n    profileInfo: ProfileInfoType | null\r\n    status: string\r\n    updateStatus: (statusText: string) => void\r\n    updatePhoto: (file: any) => void\r\n    isOwner: boolean | null\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({ profileInfo, status, updateStatus, updatePhoto, isOwner }) => {\r\n\r\n    const [statusEditMode, setStatusEditMode] = useState(false)\r\n    const [statusText, setStatusText] = useState(status)\r\n\r\n    useEffect(() => {\r\n        setStatusText(status);\r\n    }, [status])\r\n\r\n    const saveNewStatus = () => {\r\n        updateStatus(statusText);\r\n        setStatusEditMode(false)\r\n    }\r\n\r\n    const onStatusTextChanged = (e: React.FormEvent<HTMLInputElement>) => {\r\n        setStatusText(e.currentTarget.value);\r\n    }\r\n    const onMainPhotoSelected = (e: any) => {\r\n        updatePhoto(e.target.files[0]);\r\n    }\r\n\r\n    if (!profileInfo) return <Preloader />\r\n\r\n    return <div className={s.profileInfo_wrapper}>\r\n        <div className={s.userPhoto}>\r\n                <label htmlFor=\"photoFile\" >\r\n                    <img \r\n                        src={profileInfo.photos.large ? profileInfo.photos.large : basicPhoto} \r\n                        className={isOwner? s.ownerPhoto: \"\"} \r\n                        alt=\"User Avatar\" \r\n                    />\r\n                </label>\r\n            {isOwner && <div>\r\n                <input id=\"photoFile\" className={s.photoFile} type=\"file\" onChange={onMainPhotoSelected} />\r\n                <button className={s.editProfile}>\r\n                    <NavLink to=\"/settings\" >\r\n                        Edit profile\r\n                    </NavLink>\r\n                </button>\r\n            </div>}\r\n        </div>\r\n\r\n        <div className={s.aboutMe}>\r\n            <h1 className={s.userName}>{profileInfo.fullName}</h1>\r\n            <div className={isOwner? s.userStatus: \"\"} onClick={() => { setStatusEditMode(true) }}>\r\n                <label htmlFor=\"status\">Status: </label>\r\n                {statusEditMode && isOwner\r\n                    ? <input value={statusText} onChange={onStatusTextChanged} onBlur={saveNewStatus} autoFocus={true} />\r\n                    : <span id=\"status\" >\r\n                        {status ? status : \"User has no status\"}\r\n                    </span>}\r\n            </div>\r\n            \r\n            <div className={s.aboutMeInfo}>\r\n                <p>About me: {profileInfo.aboutMe ? profileInfo.aboutMe : \"\"}</p>\r\n            </div>\r\n            <div className={s.jobInfo}>\r\n                <p>{profileInfo.lookingForAJob? `Looking for a job ✔️`: \"Not looking for a job ❌\"}</p>\r\n                <p>{profileInfo.lookingForAJobDescription? profileInfo.lookingForAJobDescription: \"\"}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default ProfileInfo;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\r\nimport { profileActions, getProfile, getStatus, updatePhoto, updateStatus } from \"../../store/profile-reducer\";\r\nimport Posts from \"./Posts/Posts\";\r\nimport basicPhoto from \"../../assets/images/basicUserPhoto.png\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport { PostType, ProfileInfoType } from \"../../store/types/types\";\r\nimport { AppStateType } from \"../../store/store\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\ntype TStateProps = {\r\n    profileInfo: ProfileInfoType | null\r\n    status: string\r\n    posts: Array<PostType>\r\n    ownerId: number | null\r\n    isLoading: boolean\r\n}\r\ntype TDispatchProps = {\r\n    getProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    addNewPost: (postText: string) => void\r\n    updateStatus: (status: string) => void\r\n    updatePhoto: (photoFile: any) => any\r\n}\r\ntype TOwnProps = {\r\n    match: any\r\n}\r\n\r\ntype PropsType = TStateProps & TDispatchProps & TOwnProps\r\n\r\nconst Profile: React.FC<PropsType> = ({ getProfile, getStatus, match, ownerId, profileInfo, status, posts, addNewPost, updateStatus, updatePhoto, isLoading }) => {\r\n\r\n    useEffect(() => {\r\n        if (ownerId !== null){\r\n            getProfile(match.params.userId ? match.params.userId : ownerId);\r\n            getStatus(match.params.userId ? match.params.userId : ownerId);\r\n        }\r\n    }, [match.params.userId, ownerId, getProfile, getStatus])\r\n\r\n    if (!profileInfo) return <Preloader />\r\n\r\n    return <>\r\n        {isLoading? <Preloader />\r\n        : <div>\r\n            <ProfileInfo\r\n                profileInfo={profileInfo}\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n                updatePhoto={updatePhoto}\r\n                isOwner={!match.params.userId}\r\n            />\r\n            <Posts\r\n                posts={posts}\r\n                userPhoto={profileInfo?.photos.small ? profileInfo.photos.small : basicPhoto}\r\n                addNewPost={addNewPost}\r\n                isOwner={!match.params.userId}\r\n            />\r\n        </div>} \r\n    </>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): TStateProps => ({\r\n    profileInfo: state.profile.profileInfo,\r\n    status: state.profile.status,\r\n    posts: state.profile.posts,\r\n    ownerId: state.auth.userData.id,\r\n    isLoading: state.profile.isLoading\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<TStateProps, TDispatchProps, TOwnProps, AppStateType>(mapStateToProps, { getProfile, getStatus, addNewPost: profileActions.addNewPost, updateStatus, updatePhoto }),\r\n    withAuthRedirect,\r\n    withRouter\r\n)(Profile);","import { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\r\nimport { getProfile, getStatus, updateProfile } from \"../../store/profile-reducer\";\r\nimport s from \"./Settings.module.scss\"\r\nimport * as Yup from \"yup\";\r\nimport { AppStateType } from \"../../store/store\";\r\nimport { ProfileInfoType } from \"../../store/types/types\";\r\nimport React from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\ntype TStateProps = {\r\n    profileInfo: ProfileInfoType | null\r\n    ownerId: number | null\r\n}\r\ntype TDispatchProps = {\r\n    updateProfile: (profileInfo: ProfileInfoType) => void\r\n    getProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n}\r\ntype PropsType = TStateProps & TDispatchProps\r\n\r\nconst Settings: React.FC<PropsType> = ({ profileInfo, updateProfile, ownerId, getProfile, getStatus }) => {\r\n    if (ownerId === null) return <Preloader />\r\n\r\n    if (ownerId !== profileInfo?.userId) {\r\n        getProfile(ownerId);\r\n        getStatus(ownerId);\r\n    }\r\n    if (!profileInfo || ownerId !== profileInfo.userId) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const initialValues: ProfileInfoType = {\r\n        aboutMe: profileInfo.aboutMe,\r\n        userId: profileInfo.userId,\r\n        contacts: {\r\n            facebook: profileInfo.contacts.facebook,\r\n            website: profileInfo.contacts.website,\r\n            vk: profileInfo.contacts.vk,\r\n            twitter: profileInfo.contacts.twitter,\r\n            instagram: profileInfo.contacts.instagram,\r\n            youtube: profileInfo.contacts.youtube,\r\n            github: profileInfo.contacts.github,\r\n            mainLink: profileInfo.contacts.mainLink,\r\n        },\r\n        lookingForAJob: profileInfo.lookingForAJob,\r\n        lookingForAJobDescription: profileInfo.lookingForAJobDescription,\r\n        fullName: profileInfo.fullName,\r\n        photos: profileInfo.photos\r\n    }\r\n\r\n    const onSubmit = (values: ProfileInfoType) => {\r\n        updateProfile(values)\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        contacts: Yup.object({\r\n            facebook: Yup.string().url(\"! Invalid url format\"),\r\n            website: Yup.string().url(\"! Invalid url format\"),\r\n            vk: Yup.string().url(\"! Invalid url format\"),\r\n            twitter: Yup.string().url(\"! Invalid url format\"),\r\n            instagram: Yup.string().url(\"! Invalid url format\"),\r\n            youtube: Yup.string().url(\"! Invalid url format\"),\r\n            github: Yup.string().url(\"! Invalid url format\"),\r\n            mainLink: Yup.string().url(\"! Invalid url format\")\r\n        }),\r\n        aboutMe: Yup.string().max(200, \"! Too long text\"),\r\n        fullName: Yup.string().max(20, \"! Too long name\"),\r\n        lookingForAJobDescription: Yup.string().max(200, \"! Too long text\")\r\n    })\r\n\r\n    return <div className={s.settingsComponent}>\r\n        <h2>Account settings</h2>\r\n\r\n        <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n            <Form>\r\n                <div className={s.settingsWrapper}>\r\n\r\n                    <label htmlFor=\"aboutMe\">About Me:</label>\r\n                    <Field as=\"textarea\" name=\"aboutMe\" id=\"aboutMe\" />\r\n                    <span className={s.errorMessage}><ErrorMessage name=\"aboutMe\" /></span>\r\n                    \r\n                    <label htmlFor=\"fullName\">Full Name:</label>\r\n                    <Field type=\"text\" name=\"fullName\" id=\"fullName\" />\r\n                    <span className={s.errorMessage}><ErrorMessage name=\"fullName\" /></span>\r\n                    \r\n                    <label htmlFor=\"lookingForAJobDescription\">Job information:</label>\r\n                    <Field as=\"textarea\" name=\"lookingForAJobDescription\" id=\"lookingForAJobDescription\" />\r\n                    <span className={s.errorMessage}><ErrorMessage name=\"lookingForAJobDescription\" /></span>\r\n\r\n                    <label htmlFor=\"lookingForAJob\"> Looking for a job:</label>\r\n                    <Field type=\"checkbox\" name=\"lookingForAJob\" id=\"lookingForAJob\"/>\r\n                    <label htmlFor=\"lookingForAJob\" className={s.toggle }><span></span></label>\r\n                    <span></span>\r\n\r\n\r\n                    <h2>Contacts</h2> <span></span> <span></span>\r\n\r\n                    <label htmlFor=\"facebook\">Facebook:</label>\r\n                    <Field type=\"text\" name=\"contacts.facebook\" id=\"facebook\" />\r\n                    <span className={s.errorMessage}><ErrorMessage name=\"contacts.facebook\" /></span>\r\n\r\n                    <label htmlFor=\"website\">Website:</label>\r\n                    <Field type=\"text\" name=\"contacts.website\" id=\"website\" />\r\n                    <span className={s.errorMessage}><ErrorMessage name=\"contacts.website\" /></span>\r\n\r\n                    <label htmlFor=\"vk\">Vkontakte:</label>\r\n                    <Field type=\"text\" name=\"contacts.vk\" id=\"vk\" />\r\n                    <span className={s.errorMessage}><ErrorMessage name=\"contacts.vk\" /></span>\r\n\r\n                    <label htmlFor=\"twitter\">Twitter:</label>\r\n                    <Field type=\"text\" name=\"contacts.twitter\" id=\"twitter\" />\r\n                    <span className={s.errorMessage}><ErrorMessage name=\"contacts.twitter\" /></span>\r\n\r\n                    <label htmlFor=\"instagram\">Instagram:</label>\r\n                    <Field type=\"text\" name=\"contacts.instagram\" id=\"instagram\" />\r\n                    <span className={s.errorMessage}><ErrorMessage name=\"contacts.instagram\" /></span>\r\n\r\n                    <label htmlFor=\"youtube\">Youtube:</label>\r\n                    <Field type=\"text\" name=\"contacts.youtube\" id=\"youtube\" />\r\n                    <span className={s.errorMessage}><ErrorMessage name=\"contacts.youtube\" /></span>\r\n\r\n                    <label htmlFor=\"github\">Github:</label>\r\n                    <Field type=\"text\" name=\"contacts.github\" id=\"github\" />\r\n                    <span className={s.errorMessage}><ErrorMessage name=\"contacts.github\" /></span>\r\n\r\n                    <label htmlFor=\"mainLink\">MainLink:</label>\r\n                    <Field type=\"text\" name=\"contacts.mainLink\" id=\"mainLink\" />\r\n                    <span className={s.errorMessage}><ErrorMessage name=\"contacts.mainLink\" /></span>\r\n\r\n                </div>\r\n                \r\n                <button type=\"submit\" className={s.submitButton}>\r\n                    Save changes\r\n                </button>\r\n                \r\n            </Form>\r\n        </Formik>\r\n    </div >\r\n}\r\n\r\nconst maStateToProps = (state: AppStateType) => ({\r\n    profileInfo: state.profile.profileInfo,\r\n    ownerId: state.auth.userData.id\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(maStateToProps, { updateProfile, getProfile, getStatus })\r\n)(Settings);","import { UserType } from \"../store/types/types\";\r\nimport { BasicResponseType, instance } from \"./instance-api\";\r\n\r\ntype TgetUsers = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string\r\n}\r\n\r\nexport const usersAPI = {\r\n    async getUsers(count: number, page: number, term: string) {\r\n        const res = await instance.get<TgetUsers>(`/users/?count=${count}&page=${page}&term=${term}`)\r\n        return res.data\r\n    },\r\n    async follow(userId: number) {\r\n        const res = await instance.post<BasicResponseType>(`/follow/${userId}`)\r\n        return res.data\r\n    },\r\n    async unfollow(userId: number) {\r\n        const res = await instance.delete<BasicResponseType>(`/follow/${userId}`)\r\n        return res.data\r\n    }\r\n}","import s from \"./Paginator.module.scss\";\r\n\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    currentPage?: number\r\n    itemsPerPage: number\r\n    loading: boolean\r\n    pagesInPaginator?: number\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({ totalItemsCount, onPageChanged, currentPage = 1, itemsPerPage, loading, pagesInPaginator = 10 }) => {\r\n\r\n    let totalPages = Math.ceil(totalItemsCount / itemsPerPage);\r\n    let lastPage = pagesInPaginator + currentPage - 1;\r\n    let pages = [];\r\n\r\n    if (currentPage >= 7 && currentPage <= totalPages - 3) {\r\n        for (let i = currentPage; i <= lastPage; i++) {\r\n            pages.push(<li key={i}><button  className={currentPage === i - 6 ? s.activePage : s.page} onClick={() => { onPageChanged(i - 6) }}>{i - 6}</button></li>)\r\n        }\r\n    } else if (currentPage < 7) {\r\n        for (let i = 1; i <= pagesInPaginator; i++) {\r\n            pages.push(<li key={i}><button  className={currentPage === i ? s.activePage : s.page} onClick={() => { onPageChanged(i) }}>{i}</button></li>)\r\n        }\r\n    } else if (currentPage > totalPages - 3) {\r\n        for (let i = totalPages - pagesInPaginator; i < totalPages; i++) {\r\n            pages.push(<li key={i}><button  className={currentPage === i ? s.activePage : s.page} onClick={() => { onPageChanged(i) }}>{i}</button></li>)\r\n        }\r\n    }\r\n\r\n    return <nav className={s.paginatorWrapper}>\r\n        <button className={s.page} disabled={currentPage === 1 || loading ? true\r\n            : false} onClick={() => onPageChanged(currentPage - 1)}>&#60;</button>\r\n\r\n            <ul className={s.pages}>\r\n                {pages}\r\n            </ul>\r\n            <span>{\" ... \"}</span>\r\n\r\n        <button className={currentPage === totalPages ? s.activePage : s.page} onClick={() => onPageChanged(totalPages)}  >{totalPages}</button>\r\n\r\n        <button className={s.page} disabled={currentPage === totalPages || loading ? true : false} onClick={() => onPageChanged(currentPage + 1)}>&#62;</button>\r\n    </nav>\r\n}\r\nexport default Paginator;","import React, { useState } from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport { usersAPI } from \"../../../api/users-api\";\r\nimport basicPhoto from \"../../../assets/images/basicUserPhoto.png\";\r\nimport s from \"./UserItem.module.scss\";\r\n\r\ntype PropsType = {\r\n    photo: string | null\r\n    name: string\r\n    status: string | null\r\n    id: number\r\n    followed: boolean\r\n}\r\n\r\nconst UserItem: React.FC<PropsType> = ({ photo, name, status, id, followed }) => {\r\n\r\n    const [isFollowed, setIsFollowed] = useState(followed);\r\n    const [loading, isLoading] = useState(false);\r\n\r\n    const follow = async (id: number) => {\r\n        isLoading(true)\r\n        const res = await usersAPI.follow(id);\r\n        if (res.resultCode === 0) setIsFollowed(true);\r\n        isLoading(false);\r\n    }\r\n\r\n    const unfollow = async (id: number) => {\r\n        isLoading(true)\r\n        const res = await usersAPI.unfollow(id);\r\n        if (res.resultCode === 0) setIsFollowed(false);\r\n        isLoading(false);\r\n    }\r\n\r\n    return <div className={s.userItem} key={id}>\r\n        <div>\r\n            <NavLink to={`/profile/${id}`}>\r\n                <img onClick={() => { <Redirect to={`profile/${id}`} /> }} src={photo ? photo : basicPhoto} className={s.userPhoto} alt=\"User Avatar\" />\r\n            </NavLink>\r\n        </div>\r\n\r\n        <div className={s.userInfo}>\r\n            <NavLink to={`/profile/${id}`} className={s.userName}>{name}</NavLink>\r\n            <span>{status ? status : \"User has no status\"}</span>\r\n        </div>\r\n\r\n        <div className={s.subscribeBlock}>\r\n            {isFollowed\r\n                ? <button disabled={loading} onClick={() => { unfollow(id) }} className={s.followedButton}>Unfollow</button>\r\n                : <button disabled={loading} onClick={() => { follow(id) }} >Follow</button>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\nexport default UserItem;","import { FC, useState } from \"react\";\r\nimport s from \"./UsersSearchForm.module.scss\"\r\n\r\ntype PropsType = {\r\n    setFindValue: (value: string) => void\r\n    setCurrentPage: (val: number) => void\r\n}\r\n\r\nconst UsersSearchForm: FC<PropsType> = ({setFindValue, setCurrentPage}) => {\r\n\r\n    const [term, setTerm] = useState(\"\")\r\n\r\n    const onChangeTerm= (e: any) =>{\r\n        setTerm(e.target.value)\r\n    }\r\n\r\n    const findUsers = () => { \r\n        setFindValue(term)\r\n        setCurrentPage(1)\r\n    }\r\n    \r\n    return <div className={s.searchWrapper}>\r\n        <input type=\"text\" name=\"term\" className={s.searchField} value={term} onChange={onChangeTerm}/>\r\n        <button className={s.searchButton} onClick={findUsers}  > Find User</button>\r\n    </div>\r\n}\r\nexport default UsersSearchForm","import ContentLoader from \"react-content-loader\"\r\n\r\nconst FakeUserItem = () => (\r\n    <ContentLoader \r\n      speed={1}\r\n      width={920}\r\n      height={103}\r\n      viewBox=\"0 0 920 103\"\r\n      backgroundColor=\"#dedede\"\r\n      foregroundColor=\"#8575ff\"\r\n    >\r\n      <rect x=\"534\" y=\"113\" rx=\"0\" ry=\"0\" width=\"88\" height=\"71\" /> \r\n    <rect x=\"573\" y=\"182\" rx=\"10\" ry=\"10\" width=\"150\" height=\"90\" /> \r\n    <rect x=\"572\" y=\"244\" rx=\"3\" ry=\"3\" width=\"150\" height=\"15\" /> \r\n    <rect x=\"577\" y=\"251\" rx=\"3\" ry=\"3\" width=\"90\" height=\"15\" /> \r\n    <rect x=\"576\" y=\"248\" rx=\"8\" ry=\"8\" width=\"80\" height=\"25\" /> \r\n    <rect x=\"564\" y=\"515\" rx=\"8\" ry=\"8\" width=\"32\" height=\"32\" /> \r\n    <circle cx=\"586\" cy=\"527\" r=\"8\" /> \r\n    <circle cx=\"621\" cy=\"481\" r=\"125\" /> \r\n    <rect x=\"394\" y=\"507\" rx=\"10\" ry=\"10\" width=\"280\" height=\"84\" /> \r\n    <rect x=\"516\" y=\"516\" rx=\"5\" ry=\"5\" width=\"90\" height=\"30\" /> \r\n    <rect x=\"498\" y=\"501\" rx=\"20\" ry=\"20\" width=\"150\" height=\"45\" /> \r\n    <circle cx=\"55\" cy=\"55\" r=\"40\" /> \r\n    <circle cx=\"584\" cy=\"202\" r=\"36\" /> \r\n    <circle cx=\"620\" cy=\"215\" r=\"79\" /> \r\n    <rect x=\"105\" y=\"50\" rx=\"3\" ry=\"3\" width=\"180\" height=\"15\" /> \r\n    <rect x=\"105\" y=\"20\" rx=\"3\" ry=\"3\" width=\"133\" height=\"20\" /> \r\n    <rect x=\"202\" y=\"21\" rx=\"0\" ry=\"0\" width=\"2\" height=\"0\" /> \r\n    <rect x=\"790\" y=\"25\" rx=\"4\" ry=\"4\" width=\"85\" height=\"30\" />\r\n    </ContentLoader>\r\n  )\r\nexport default FakeUserItem","import { useEffect, useState } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { usersAPI } from \"../../api/users-api\";\r\nimport withAuthRedirect from \"../../hocs/withAuthRedirect\";\r\nimport { UserType } from \"../../store/types/types\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport UserItem from \"./UserItem/UserItem\";\r\nimport UsersSearchForm from \"./UsersSearchForm/UsersSearchForm\";\r\nimport FakeUserItem from \"./UserItem/FakeUserItem\";\r\n\r\nconst Users: React.FC = () => {\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n    const [users, setUsers] = useState<Array<UserType>>([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalUsersCount, setTotalUsersCount] = useState(0);\r\n    const [findValue, setFindValue] = useState(\"\")\r\n    const usersPerPage = 20;\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const res = await usersAPI.getUsers(usersPerPage, currentPage, findValue);\r\n            setUsers(res.items)\r\n            setTotalUsersCount(res.totalCount)\r\n            setLoading(false);\r\n        })()\r\n    }, [currentPage, findValue])\r\n\r\n    const onPageChanged = (page: number) => {\r\n        setCurrentPage(page);\r\n    }\r\n\r\n    let showUsers = users.map(u => <UserItem key={u.id} name={u.name} id={u.id} photo={u.photos.small} followed={u.followed} status={u.status} />)\r\n\r\n    return <div>\r\n        <UsersSearchForm setFindValue={setFindValue} setCurrentPage={setCurrentPage} />\r\n        <div>\r\n            <Paginator\r\n            totalItemsCount={totalUsersCount}\r\n            onPageChanged={onPageChanged}\r\n            currentPage={currentPage}\r\n            itemsPerPage={usersPerPage}\r\n            loading={loading}\r\n            pagesInPaginator={10} />\r\n\r\n            {loading ? [...Array(10)].map((i, index) => <FakeUserItem key={index} />) :showUsers}\r\n\r\n            <Paginator\r\n            totalItemsCount={totalUsersCount}\r\n            onPageChanged={onPageChanged}\r\n            currentPage={currentPage}\r\n            itemsPerPage={usersPerPage}\r\n            loading={loading}\r\n            pagesInPaginator={10} />\r\n        </div>\r\n    </div >\r\n}\r\nexport default compose(withAuthRedirect)(Users);","import { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport s from './App.module.scss';\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport Header from \"./components/Header/Header\";\nimport Login from \"./components/Login/Login\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Settings from \"./components/Settings/Settings\";\nimport Users from \"./components/Users/Users\";\nimport { userAuthorizing } from \"./store/auth-reducer\";\nimport { AppStateType } from \"./store/store\";\nimport { ProfileInfoType } from \"./store/types/types\";\n\ntype TStateProps = {\n  isAuth: boolean | null\n  profileInfo: ProfileInfoType | null\n  status: string | null\n}\n\ntype TDispatchProps = {\n  userAuthorizing: () => void\n}\ntype TOwnProps = {\n\n} \n\ntype PropsType = TStateProps & TDispatchProps & TOwnProps\n\nconst App: React.FC<PropsType> = ({ userAuthorizing, isAuth }) => {\n\n  useEffect(() => {\n    userAuthorizing();\n  }, [userAuthorizing])\n\n  return <div className={s.app__Wrapper}>\n    <header className={s.app__Header}>\n      <Header />\n    </header>\n\n    <div className={s.app__Navbar}>\n      <Navbar />\n    </div>\n\n    <main className={s.app__Content}>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/profile\" />\n        <Route path=\"/profile/:userId?\" render={() => <Profile />} />\n        <Route path=\"/dialogs\" render={() => <Dialogs />} />\n        <Route path=\"/users\" render={() => <Users />} />\n        <Route path=\"/settings\" render={() => <Settings />} />\n        <Route path=\"/login\" render={() => <Login />} />\n        <Redirect from=\"\" to=\"/profile\" />\n      </Switch>\n    </main>\n\n  </div>\n}\n\nconst mapStateToProps = (state: AppStateType): TStateProps => ({\n  profileInfo: state.profile.profileInfo,\n  status: state.profile.status,\n  isAuth: state.auth.isAuth\n})\nexport default connect<TStateProps, TDispatchProps, TOwnProps, AppStateType>(mapStateToProps, { userAuthorizing })(App);","import { InferActionTypes } from './store';\r\nimport { usersAPI } from \"../api/users-api\";\r\nimport { CommonThunkCreatorType, EntireUsersType, UserType } from \"./types/types\";\r\n\r\nconst SET_USERS = \"SN/USERS/SET_USERS\";\r\n\r\nlet initialState = {\r\n    users: null as EntireUsersType | null,\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users, totalUsersCount: action.totalUsersCount } as any\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const usersActions = {\r\n    setUsers: (users: Array<UserType>, totalUsersCount: number) => ({ type: SET_USERS, users, totalUsersCount })\r\n}\r\n\r\nexport const getUsers = (count: number, page: number, term: string): ThunkType => async dispatch => {\r\n    const res = await usersAPI.getUsers(count, page, \"\")\r\n    if (!res.error) {\r\n        dispatch(usersActions.setUsers(res.items, res.totalCount));\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionsType = InferActionTypes<typeof usersActions>\r\ntype ThunkType = CommonThunkCreatorType<ActionsType>","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport profileReducer from \"./profile-reducer\"\r\nimport authReducer from \"./auth-reducer\"\r\nimport dialogsReducer from \"./dialogs-reducer\"\r\nimport usersReducer from \"./users-reducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    auth: authReducer,\r\n    users: usersReducer,\r\n    dialogs: dialogsReducer\r\n});\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n\r\nconst store = createStore(rootReducer, composeEnhancers( applyMiddleware(thunk)));\r\n\r\nexport default store;","import ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_wrapper\":\"Header_header_wrapper__Aeret\",\"mediaBlock\":\"Header_mediaBlock__2B-Xh\",\"logo\":\"Header_logo__2_Slf\",\"slogan\":\"Header_slogan__2ab9O\",\"loginBlock\":\"Header_loginBlock__2ta3n\",\"linkToProfile\":\"Header_linkToProfile__2mVSy\",\"linkToLogin\":\"Header_linkToLogin__2WRmu\",\"logoutButton\":\"Header_logoutButton__2ICDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"Login_loginWrapper__276UC\",\"toggle\":\"Login_toggle__ghA2d\",\"checkboxBlock\":\"Login_checkboxBlock__2Yks3\",\"label\":\"Login_label__1X41e\",\"loginButton\":\"Login_loginButton__Xv8tB\",\"captchaBlock\":\"Login_captchaBlock__1sJjV\",\"serverErrorMessage\":\"Login_serverErrorMessage__2_LT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo_wrapper\":\"ProfileInfo_profileInfo_wrapper__3fTXR\",\"userPhoto\":\"ProfileInfo_userPhoto__MPJ12\",\"ownerPhoto\":\"ProfileInfo_ownerPhoto__7uaro\",\"photoFile\":\"ProfileInfo_photoFile__1jKbj\",\"editProfile\":\"ProfileInfo_editProfile__HwzNl\",\"aboutMe\":\"ProfileInfo_aboutMe__1y4EJ\",\"userName\":\"ProfileInfo_userName__3DjFm\",\"userStatus\":\"ProfileInfo_userStatus__1EfvW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postField\":\"Posts_postField__3kgQM\",\"newPostButton\":\"Posts_newPostButton__3klq3\",\"post\":\"Posts_post__fZPPo\",\"userPhoto\":\"Posts_userPhoto__11TS2\",\"postText\":\"Posts_postText__2nuXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"UserItem_userItem__1he0e\",\"userPhoto\":\"UserItem_userPhoto__pEM9g\",\"userInfo\":\"UserItem_userInfo__1WxTM\",\"userName\":\"UserItem_userName__1_q2g\",\"subscribeBlock\":\"UserItem_subscribeBlock__2nLCp\",\"followedButton\":\"UserItem_followedButton__2zRpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__Wrapper\":\"App_app__Wrapper__e5wQU\",\"app__Header\":\"App_app__Header__3CKVQ\",\"app__Navbar\":\"App_app__Navbar__1dPdj\",\"app__Content\":\"App_app__Content__2n7KG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchWrapper\":\"UsersSearchForm_searchWrapper__28-9j\",\"searchField\":\"UsersSearchForm_searchField__17OXu\",\"searchButton\":\"UsersSearchForm_searchButton__33p-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navbar_link__1mMTW\",\"active\":\"Navbar_active__1rGjo\"};"],"sourceRoot":""}